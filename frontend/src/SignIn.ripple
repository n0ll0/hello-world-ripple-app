import { track } from 'ripple';
import { Layout } from '@/Layout.ripple';
import { AuthContext } from '@/context/auth.ripple';
import { navigateTo } from 'ripple-router';

export component SignIn() {
	const auth = AuthContext.get();

	let error = track('');

	<Layout>
		<div class="signin-container">
			<div class="signin-card">
				<h2>{'Sign In'}</h2>
				<form onsubmit={async function (e: Event) {
					e.preventDefault();
					@error = '';

					const data = new FormData(e.target as HTMLFormElement);
					const username = data.get('username') as string;
					const password = data.get('password') as string;

					if (!username?.trim() || !password?.trim()) {
						@error = 'Please fill in all fields';
						return;
					}

					const result = await auth.login({ username, password });
					if (!result.success) {
						@error = result.error?.message || 'Login failed';
					}
					navigateTo('/');
				}} class="signin-form">
					<div class="form-group">
						<label for="username">{'Username'}</label>
						<input
							id="username"
							name="username"
							type="text"
							required
							disabled={@auth.@isLoading}
						/>
					</div>
					<div class="form-group">
						<label for="password">{'Password'}</label>
						<input
							id="password"
							name="password"
							type="password"
							required
							disabled={@auth.@isLoading}
						/>
					</div>
					if (@error) {
						<div class="error-message">{@error}</div>
					}
					<button type="submit" disabled={@auth.@isLoading} class="signin-btn">
						{@auth.@isLoading ? 'Signing in...' : 'Sign In'}
					</button>
				</form>
			</div>
		</div>
	</Layout>
	<style>
		.signin-container {
			display: flex;
			justify-content: center;
			align-items: center;
			min-height: 100vh;
			background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		}

		.signin-card {
			background: white;
			padding: 2rem;
			border-radius: 8px;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
			width: 100%;
			max-width: 400px;
		}

		.signin-card h2 {
			text-align: center;
			margin-bottom: 1.5rem;
			color: #333;
			font-family: 'Arial', sans-serif;
		}

		.signin-form {
			display: flex;
			flex-direction: column;
		}

		.form-group {
			margin-bottom: 1rem;
		}

		.form-group label {
			display: block;
			margin-bottom: 0.5rem;
			color: #555;
			font-weight: 500;
		}

		.form-group input {
			width: 100%;
			padding: 0.75rem;
			border: 1px solid #ddd;
			border-radius: 4px;
			font-size: 1rem;
			transition: border-color 0.3s;
		}

		.form-group input:focus {
			outline: none;
			border-color: #667eea;
		}

		.form-group input:disabled {
			background-color: #f5f5f5;
			cursor: not-allowed;
		}

		.error-message {
			color: #e74c3c;
			font-size: 0.9rem;
			margin-bottom: 1rem;
			text-align: center;
		}

		.signin-btn {
			background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
			color: white;
			border: none;
			padding: 0.75rem;
			border-radius: 4px;
			font-size: 1rem;
			cursor: pointer;
			transition: opacity 0.3s;
		}

		.signin-btn:hover:not(:disabled) {
			opacity: 0.9;
		}

		.signin-btn:disabled {
			opacity: 0.6;
			cursor: not-allowed;
		}
	</style>
}